<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sjzxywlkj.cplife.dao.RoominfoMapper">
  <resultMap id="BaseResultMap" type="com.sjzxywlkj.cplife.pojo.Roominfo">
    <id column="out_room_id" jdbcType="CHAR" property="outRoomId" />
    <result column="community_id" jdbcType="CHAR" property="communityId" />
    <result column="groups" jdbcType="CHAR" property="groups" />
    <result column="building" jdbcType="CHAR" property="building" />
    <result column="unit" jdbcType="CHAR" property="unit" />
    <result column="room" jdbcType="CHAR" property="room" />
    <result column="address" jdbcType="CHAR" property="address" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    out_room_id, community_id, groups, building, unit, room, address
  </sql>
  <select id="selectByExample" parameterType="com.sjzxywlkj.cplife.pojo.RoominfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from roominfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="start!=null">
    	limit #{start}
    	<if test="pageSize!=null">
    	,#{pageSize}
    	</if>
    </if>
  </select>
  
  <select id="selectByCid" parameterType="java.lang.String" resultMap="BaseResultMap">
  	select 
    <include refid="Base_Column_List" />
    from roominfo
    where community_id = #{_parameter,jdbcType=CHAR}
  </select>
  <select id="getAddressByOid" parameterType="java.lang.String" resultType="java.lang.String">
	  select address from roominfo where out_room_id = #{_parameter,jdbcType=CHAR} 
  </select>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from roominfo
    where out_room_id = #{outRoomId,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from roominfo
    where out_room_id = #{outRoomId,jdbcType=CHAR}
  </delete>
  <insert id="insert" parameterType="com.sjzxywlkj.cplife.pojo.Roominfo">
    insert into roominfo (out_room_id, community_id, groups, 
      building, unit, room, address
      )
    values (#{outRoomId,jdbcType=CHAR}, #{communityId,jdbcType=CHAR}, #{groups,jdbcType=CHAR}, 
      #{building,jdbcType=CHAR}, #{unit,jdbcType=CHAR}, #{room,jdbcType=CHAR}, #{address,jdbcType=CHAR}
      )
  </insert>
  <insert id="insertInfoBatch" parameterType="java.util.List">
        insert into roominfo (out_room_id, community_id,groups, 
      building, unit, room, address
      )
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.outRoomId,jdbcType=CHAR}, #{item.communityId,jdbcType=CHAR}, #{item.groups,jdbcType=CHAR}, 
      #{item.building,jdbcType=CHAR}, #{item.unit,jdbcType=CHAR}, #{item.room,jdbcType=CHAR}, #{item.address,jdbcType=CHAR}
      )
        </foreach>
  </insert>
  
  
  
  <insert id="insertSelective" parameterType="com.sjzxywlkj.cplife.pojo.Roominfo">
    insert into roominfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="outRoomId != null">
        out_room_id,
      </if>
      <if test="communityId != null">
        community_id,
      </if>
      <if test="groups != null">
        groups,
      </if>
      <if test="building != null">
        building,
      </if>
      <if test="unit != null">
        unit,
      </if>
      <if test="room != null">
        room,
      </if>
      <if test="address != null">
        address,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="outRoomId != null">
        #{outRoomId,jdbcType=CHAR},
      </if>
      <if test="communityId != null">
        #{communityId,jdbcType=CHAR},
      </if>
      <if test="groups != null">
        #{groups,jdbcType=CHAR},
      </if>
      <if test="building != null">
        #{building,jdbcType=CHAR},
      </if>
      <if test="unit != null">
        #{unit,jdbcType=CHAR},
      </if>
      <if test="room != null">
        #{room,jdbcType=CHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sjzxywlkj.cplife.pojo.Roominfo">
    update roominfo
    <set>
      <if test="communityId != null">
        community_id = #{communityId,jdbcType=CHAR},
      </if>
      <if test="groups != null">
        groups = #{groups,jdbcType=CHAR},
      </if>
      <if test="building != null">
        building = #{building,jdbcType=CHAR},
      </if>
      <if test="unit != null">
        unit = #{unit,jdbcType=CHAR},
      </if>
      <if test="room != null">
        room = #{room,jdbcType=CHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=CHAR},
      </if>
    </set>
    where out_room_id = #{outRoomId,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sjzxywlkj.cplife.pojo.Roominfo">
    update roominfo
    set community_id = #{communityId,jdbcType=CHAR},
      groups = #{groups,jdbcType=CHAR},
      building = #{building,jdbcType=CHAR},
      unit = #{unit,jdbcType=CHAR},
      room = #{room,jdbcType=CHAR},
      address = #{address,jdbcType=CHAR}
    where out_room_id = #{outRoomId,jdbcType=CHAR}
  </update>
  
  <delete id="del" parameterType="java.util.List">
    	delete from
    	    roominfo
    	where out_room_id in
    	     <foreach collection="list" item="id" 
    	     		open="(" close=")" separator=",">
    	           #{id}
    	     </foreach>
  </delete>
  
  
  <select id="countByExample" parameterType="com.sjzxywlkj.cplife.pojo.RoominfoExample" resultType="java.lang.Integer" >
    select count(*) from roominfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
  <select id="getGroupsByCid" parameterType="com.sjzxywlkj.cplife.pojo.RoominfoExample" resultType="java.lang.String">
  	select distinct groups from roominfo 
  	<if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
  <select id="getBuildings" parameterType="com.sjzxywlkj.cplife.pojo.RoominfoExample" resultType="java.lang.String">
  	select distinct building from roominfo 
  	<if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
  
</mapper>